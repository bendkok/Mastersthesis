#v known, no parameters fixed
ode_br = @ODEmodel(
    # E_Na=50, 
    # g_Na=0.04, 
    # g_Nac=3e-05, 
    # g_s=0.0009, 
    # 0.5=0.5,
    # 50000=50000.0, 
    # 1000=1000.0, 
    # 1=1.0,
    # 10=10.0, 
    # 0.01=0.01,

    # Expressions for the Sodium current component
    # i_Na = (g_Nac + g_Na * (m * m * m) * h * j) * (-E_Na + V),

    # Expressions for the m gate component
    # alpha_m = (-47 - V) / (-1 + 0.009095277101695816 * (272/100)^(-0.1 * V)),
    # beta_m = 0.7095526727489909 *  (272/100)^(- (56/1000)  * V),
    m'(t) = (1 - m) * ((-47 - V) / (-1 + (91 / 1000) * (272/100)^(-(1/10) * V))) - (( 710 / 1000 ) *  (272/100)^(- (56/1000)  * V)) * m,

    # Expressions for the h gate component
    # alpha_h = 5.497962438709065e-10 *  (272/100)^(-0.25 * V),
    # beta_h = 1.7 / (1 + 0.1580253208896478 *  (272/100)^(-0.082 * V)),
    h'(t) = (1 - h) * ( ( 550 / 10000000000000 ) *  (272/100)^(-(1/4) * V)) - ((17/10) / (1 + (158 / 1000 ) *  (272/100)^(-(82 / 1000) * V)) * h),

    # Expressions for the j gate component
    # alpha_j = (1.8690473007222892e-10 *  (272/100)^(-0.25 * V) / (1 + 1.6788275299956603e-07 *  (272/100)^(-0.2 * V))  ),
    # beta_j = 0.3 / (1 + 0.040762203978366204 *  (272/100)^(-0.1 * V)),
    j'(t) = (1 - j) * (( ( 187 / 10000000000000 )  *  (272/100)^(-(1/4) * V) / (1 + ( 1689 / 10000000000 ) *  (272/100)^(-(1/5) * V))  )) - ( (3/10) / (1 + ( 4076 / 100000 ) *  (272/100)^( -(1/10) * V))) * j,

    # Expressions for the Slow inward current component
    # E_s = -82.3 - 13.0287 *  log(0.001 * Cai),
    # i_s = g_s * (-(-82.3 - 13.0287 *  log(0.001 * Cai)) + V) * d * f,
    Cai'(t) = ( 7 / 1000000 ) - ( 7 / 100 ) * Cai - (1/100) * (g_s * (-(- (823 / 10) - (130287 / 10000) *  log( (1 / 1000) * Cai)) + V) * d * f),

    # Expressions for the d gate component
    # alpha_d = (0.095 * (272/100)^(1 / 20 - V / 100) / (1 + 1.4332881385696572 * (272/100)^(-0.07199424046076314 * V)) ),
    # beta_d = 0.07 * (272/100)^(-44 / 59 - V / 59) / (1 + (272/100)^(11 / 5 + V / 20)),
    d'(t) = (1 - d) * (( ( 95 / 1000) * (272/100)^(1 / 20 - V / 100) / (1 + (   14332881385696572  / 10000000000000000) * (272/100)^(- (7199424046076314 / 100000000000000000 ) * V)) )) - ( ( 7 / 100) * (272/100)^(-44 / 59 - V / 59) / (1 + (272/100)^(11 / 5 + V / 20))) * d,

    # Expressions for the f gate component
    # alpha_f = (0.012 * (272/100)^(-28 / 125 - V / 125) / (1 + 66.5465065250986 * (272/100)^(0.14992503748125938 * V)) ),
    # beta_f = 0.0065 * (272/100)^(-3 / 5 - V / 50) / (1 + (272/100)^(-6 - V / 5)),
    f'(t) = (1 - f) * (((12 / 1000) * (272/100)^(-28 / 125 - V / 125) / (1 + (665465065250986 / 10000000000000) * (272/100)^( (14992503748125938 / 100000000000000000) * V)) )) - ((65 / 10000) * (272/100)^(-3 / 5 - V / 50) / (1 + (272/100)^(-6 - V / 5))) * f,

    # Expressions for the Time dependent outward current component
    # i_x1 = ( 0.0019727757115328517 * (-1 + 21.75840239619708 * (272/100)^(0.04 * V)) * (272/100)^(-0.04 * V) * x1 ),

    # Expressions for the X1 gate component
    # alpha_x1 = ( 0.031158410986342627 * (272/100)^(0.08264462809917356 * V) / (1 + 17.41170806332765 * (272/100)^(0.05714285714285714 * V)) ),
    # beta_x1 = (0.0003916464405623223 * (272/100)^(-0.05998800239952009 * V) / (1 + (272/100)^(-4 / 5 - V / 25)) ),
    x1'(t) = (1 - x1) * (( ( 31158410986342627 / 1000000000000000000) * (272/100)^( (8264462809917356 / 1000000000000000000 ) * V) / (1 + (174117 / 10000) * (272/100)^( ( 57143 / 1000000) * V)) )) - (( ( 3916464405623223 / 10000000000000000000) * (272/100)^(- (5999 / 100000) * V) / (1 + (272/100)^(-4 / 5 - V / 25)) )) * x1,

    # Expressions for the Time independent outward current component
    # i_K1 = 0.0035 * (4.6000000000000005 + 0.2 * V) / ( 1 - 0.39851904108451414 * (272/100)^(-0.04 * V) ) + 0.0035 * (-4 + 119.85640018958804 * (272/100)^(0.04 * V)) / ( 8.331137487687693 * (272/100)^(0.04 * V) + 69.4078518387552 * (272/100)^(0.08 * V) ),

    # Expressions for the Stimulus protocol component
    # if (t - 10 - 1000 * floor((t - 10) / 1000) <= 1)and(t <= 50000)and(t >= 10)
    #     Istim = 0.5
    # else
    #     Istim = 0
    # end,
    # Istim = (0.5, if (t - 10 - 1000 * floor((t - 10) / 1000) <= 1)and(t <= 50000)and(t >= 10) else 0,),
    # 0.5=0.5, 50000=50000.0, 1000=1000.0,
    # 1=1.0, 10=10.0

    # Expressions for the Membrane component
    # V'(t) = (-(0.0035 * (4.6000000000000005 + 0.2 * V) / ( 1 - 0.39851904108451414 * (272/100)^(-0.04 * V) ) + 0.0035 * (-4 + 119.85640018958804 * (272/100)^(0.04 * V)) / ( 8.331137487687693 * (272/100)^(0.04 * V) + 69.4078518387552 * (272/100)^(0.08 * V) )) - (g_Nac + g_Na * (m * m * m) * h * j) * (-E_Na + V) - (g_s * (-(-82.3 - 13.0287 *  log(0.001 * Cai)) + V) * d * f) - (( 0.0019727757115328517 * (-1 + 21.75840239619708 * (272/100)^(0.04 * V)) * (272/100)^(-0.04 * V) * x1 )) + 0.5) / 0.01,
    V'(t) = (-( (35 / 10000) * ( (46 / 10) + (1/5) * V) / ( 1 - (3985 / 10000) * (272/100)^(-(4 / 100) * V) ) + ( 35 / 10000) * (-4 + (11986 / 100) * (272/100)^( (4 / 100) * V)) / ( (83311 / 10000) * (272/100)^(0.04 * V) + (6941 / 100) * (272/100)^( (8 / 100) * V) )) - (g_Nac + g_Na * (m * m * m) * h * j) * (-50 + V) - (g_s * (-(-(823 / 10) - (130287 / 10000) *  log((1 / 1000) * Cai)) + V) * d * f) - (( (1973 / 1000000 ) * (-1 + (217584 / 10000) * (272/100)^((4 / 100) * V)) * (272/100)^(-(4 / 100) * V) * x1 )) + 0) / (1 / 100),

    y1(t) = m(t),
    y2(t) = h(t),
    y3(t) = j(t),
    y4(t) = Cai(t),
    y5(t) = d(t),
    y6(t) = f(t),
    y7(t) = x1(t),
    y8(t) = V(t),
)